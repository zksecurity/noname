var searchIndex = new Map(JSON.parse('[["noname",{"t":"CCCCCCCCCCCCCCCCCCCCKKGKRRPPPRMMMMMMMMNNNMNNNMNMMNNNCMMMMNNNMCNNNNNFFFSIFNNNNNNOCNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNCONONNNNNNNNNNNNNNNNNNNNFNNNNNNHNNNNNNNHNNNNNHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFIIONNNNNNCNNONNNNNNNNNNCONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNCOOONNNNNNNNNNNNNNNNNNNNNNNNOFSSNNHNNNNNNNNNNNHGPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFEEEEENNNNONNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNONNONNNNNNNNNNCFFNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNONNONNFFPFGPPPGPNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNEEEEEEEESSECEEECECEEECCFFFFNNNNNNNNNNNNNNNNHHHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNONNNNONNNNNNNNNNOOHNNNNNNNNONNFFFNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNHHHNNNNNNNNNHONNNNNNNNNNNNNOHNNNKFNNNHNNNNNHNHNNMONNNNHHNFNNNNNNNNNNNNNNNNNONNNNNNNONNNNONNNNNCCHHHHHHHHHHHHHPPPPPPPPPPPPFGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPIPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNONNNNNNNNNNOOOOKHNPPFIGFGPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNOONNNNNNNNNNNNNNNNNNNKPPPFPGNNNNNNNNNNNNNNNNNNNNNNNHNMNNNNNNNNNNOOPPPPPPPPPPPPPPPPPPPPPPGPPPPPPFPPPPPPPPPPPPPPPPFGEPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNONNNNNCNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNONNNNFONNNNNNNNNNNNNFEEEEEEFEEEENNNNNNNNNNNNNCONNNNNNNNNONNONCNNNNNNCNNPPPPPPPPPPPPFGPPPPPPPPGPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNONNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOFFNNNNNNNNNNNNNNNONNNNNNNNOOOONNNOONNNNNNNNNPPPPFGPPPPPFPPPPFFPGPFPFPFPFGPFPFGFGPFGPFOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHOOOOONOOOOOONNNNNNNNNNNHNHNNOONONNNNNNNNNNNNNNOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNOOOOOOOOFNNNNNNNNNCNNNNNHHJSSHCHSHHHHHHHFEFEFEENNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNOONNNNNNNNNNNNONNNONNNFFNNNNNNNNNNNNNNNNNNNONNNNNNNNOOONNNONNNNNNNNNNFFNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNONNNNNNNONNNNHHHPPGPPPIPPPPPPGFPGNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNOOOFFNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNONN","n":["backends","circuit_writer","cli","compiler","constants","constraints","error","helpers","imports","inputs","lexer","name_resolution","parser","serialization","stdlib","syntax","type_checker","utils","var","witness","Backend","BackendField","BackendKind","BackendVar","Field","GeneratedWitness","KimchiVesta","R1csBls12_381","R1csBn254","Var","add","add_const","add_constant","add_private_input","add_public_input","add_public_output","assert_eq_const","assert_eq_var","borrow","borrow_mut","compute_val","compute_var","deref","deref_mut","drop","finalize_circuit","from","generate_asm","generate_witness","init","init_circuit","into","kimchi","mul","mul_const","neg","new_internal_var","new_kimchi_vesta","new_r1cs_bls12_381","new_r1cs_bn254","poseidon","r1cs","sub","try_from","try_into","type_id","vzip","GeneratedWitness","KimchiCellVar","KimchiVesta","NUM_REGISTERS","VestaField","Witness","add","add_const","add_constant","add_private_input","add_public_input","add_public_output","all_witness","asm","assert_eq_const","assert_eq_var","borrow","","","","borrow_mut","","","","builtin","clone","","clone_into","","clone_to_uninit","","cmp","compare","compile_to_indexes","compute_var","debug","default","deref","","","","deref_mut","","","","deserialize","drop","","","","eq","equivalent","","","finalize_circuit","fmt","","from","","","","full_public_inputs","generate_asm","generate_witness","get_hash","hash","init","","","","into","","","","is_empty","len","mul","mul_const","neg","new","new_internal_var","partial_cmp","poseidon","prover","public_outputs","serialize","span","to_dec_string","to_kimchi_witness","to_owned","","try_from","","","","try_into","","","","type_id","","","","vzip","","","","OrderedHashSet","borrow","borrow_mut","default","deref","deref_mut","drop","extract_vars_from_coeffs","from","init","insert","into","is_empty","iter","len","parse_coeffs","pos","try_from","try_into","type_id","vzip","poseidon","ProverIndex","VerifierIndex","asm","borrow","","borrow_mut","","deref","","deref_mut","","deserialize","drop","","from","","init","","into","","is_empty","len","prove","serialize","try_from","","try_into","","type_id","","verify","vzip","","CellVar","Constraint","GeneratedWitness","LinearCombination","R1CS","R1csBls12381Field","R1csBn254Field","a","add","add_const","add_constant","add_private_input","add_public_input","add_public_output","arkworks","assert_eq_const","assert_eq_var","b","borrow","","","","","borrow_mut","","","","","builtin","c","clone","","","","clone_into","","","","clone_to_uninit","","","","compute_var","constant","default","deref","","","","","deref_mut","","","","","deserialize","drop","","","","","eq","","equivalent","","","","","","finalize_circuit","fmt","","","","from","","","","","","generate_asm","generate_witness","get_hash","hash","init","","","","","init_circuit","into","","","","","mul","mul_const","neg","new","new_internal_var","num_constraints","outputs","poseidon","serialize","snarkjs","span","","terms","to_owned","","","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","witness","NoNameCircuit","SIMPLE_ADDITION","WITH_PUBLIC_OUTPUT_ARRAY","borrow","borrow_mut","compile_source_code","deref","deref_mut","drop","from","generate_constraints","init","into","try_from","try_into","type_id","vzip","poseidon","Error","R1CSWriterIo","SnarkjsExporter","WitnessWriterIo","borrow","","borrow_mut","","deref","","deref_mut","","drop","","fmt","","from","","","gen_r1cs_file","gen_wtns_file","init","","into","","new","source","to_string","try_from","","try_into","","type_id","","vzip","","CircuitWriter","DebugInfo","FnEnv","Gate","GateKind","VarInfo","Wiring","add_local_var","add_private_inputs","add_public_inputs","add_public_outputs","backend","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","const_info","deref","","deref_mut","","deserialize","drop","","eq","equivalent","","","error","expr_type","fmt","","fn_env","fn_info","from","","generate_circuit","generate_witness","get_local_var","init","","into","","main_info","node_type","note","serialize","size_of","span","struct_info","to_owned","try_from","","try_into","","type_id","","vzip","","writer","FnEnv","VarInfo","add_local_var","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","default","deref","","deref_mut","","drop","","fmt","","from","","get_local_var","init","","into","","mutable","nest","new","","pop","reassign","reassign_local_var","reassign_range","reassign_var_range","to_owned","","try_from","","try_into","","typ","type_id","","var","vzip","","AnnotatedCell","Cell","DoubleGeneric","Gate","GateKind","NotWired","Poseidon","Wired","Wiring","Zero","borrow","","","","","borrow_mut","","","","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","cmp","","coeffs","col","compare","","deref","","","","","deref_mut","","","","","deserialize","","","","","drop","","","","","eq","","equivalent","","","","","","fmt","","","","","","from","","","","","init","","","","","into","","","","","partial_cmp","","row","serialize","","","","","to_kimchi_gate","to_owned","","","","","to_string","try_from","","","","","try_into","","","","","typ","type_id","","","","","vzip","","","","","CmdBuild","CmdCheck","CmdInit","CmdNew","CmdProve","CmdRun","CmdTest","CmdVerify","NONAME_DIRECTORY","PACKAGE_DIRECTORY","cmd_build","cmd_build_and_check","cmd_check","cmd_init","cmd_new","cmd_new_and_init","cmd_prove","cmd_prove_and_verify","cmd_run","cmd_test","cmd_verify","manifest","packages","CmdBuild","CmdCheck","CmdRun","CmdTest","augment_args","","","","augment_args_for_update","","","","borrow","","","","borrow_mut","","","","build","cmd_build","cmd_check","cmd_run","cmd_test","command","","","","command_for_update","","","","deref","","","","deref_mut","","","","drop","","","","from","","","","from_arg_matches","","","","from_arg_matches_mut","","","","group_id","","","","init","","","","into","","","","try_from","","","","try_into","","","","type_id","","","","update_from_arg_matches","","","","update_from_arg_matches_mut","","","","vzip","","","","CmdInit","CmdNew","augment_args","","augment_args_for_update","","borrow","","borrow_mut","","cmd_init","cmd_new","command","","command_for_update","","deref","","deref_mut","","drop","","from","","from_arg_matches","","from_arg_matches_mut","","group_id","","init","","into","","try_from","","try_into","","type_id","","update_from_arg_matches","","update_from_arg_matches_mut","","vzip","","CmdProve","CmdVerify","augment_args","","augment_args_for_update","","borrow","","borrow_mut","","cmd_prove","cmd_verify","command","","command_for_update","","deref","","deref_mut","","drop","","from","","from_arg_matches","","from_arg_matches_mut","","group_id","","init","","into","","try_from","","try_into","","type_id","","update_from_arg_matches","","update_from_arg_matches_mut","","vzip","","Manifest","Package","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","dependencies","deref","","deref_mut","","description","deserialize","","drop","","from","","init","","into","","name","package","read_manifest","to_owned","","try_from","","try_into","","type_id","","version","vzip","","DependencyGraph","DependencyNode","UserRepo","borrow","","","borrow_mut","","","clone","","clone_into","","clone_to_uninit","","deref","","","deref_mut","","","deserialize","download_from_github","drop","","","eq","equivalent","","","fmt","","","","from","","","","get_dep","get_dep_code","get_deps_of_package","get_hash","hash","init","","","init_package","into","","","is_lib","repo","serialize","to_owned","","to_string","try_from","","","try_into","","","type_id","","","user","validate_package_and_get_manifest","vzip","","","IntoMiette","Sources","add","borrow","borrow_mut","compile","deref","deref_mut","drop","fmt","from","generate_witness","get","get_nast","init","into","into_miette","map","new","try_from","try_into","type_id","typecheck_next_file","typecheck_next_file_inner","vzip","Span","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","compare","default","deref","deref_mut","deserialize","drop","end","eq","equivalent","","","filename_id","fmt","from","get_hash","hash","init","into","is_empty","len","merge_with","new","partial_cmp","serialize","start","to_owned","try_from","try_into","type_id","vzip","boolean","field","and","check","is_valid","not","or","add","equal","if_else","if_else_inner","mul","neg","not_equal","sub","ArgumentTypeMismatch","ArrayAccessOnNonArray","ArrayIndexOutOfBounds","AssertionFailed","AssignmentToImmutableVariable","CannotComputeExpression","CannotConvertToField","ConstArgumentNotForMain","ConstantInOutput","DuplicateDefinition","DuplicateModule","Err","Error","ErrorKind","ExpectedConstant","ExpectedToken","FieldAccessOnNonCustomStruct","FunctionNameInUsebyVariable","FunctionReturnsType","IfElseInvalidConditionType","IfElseInvalidElseBranch","IfElseInvalidIfBranch","IfElseMismatchingBranchesTypes","InvalidArraySize","InvalidAssignmentExpression","InvalidAttribute","InvalidConstType","InvalidEndOfLine","InvalidExpression","InvalidField","InvalidFieldAccessExpression","InvalidFnCall","InvalidFunctionName","InvalidFunctionSignature","InvalidHexLiteral","InvalidIdentifier","InvalidPath","InvalidRange","InvalidRangeSize","InvalidStatement","InvalidStructField","InvalidStructFieldType","InvalidToken","InvalidType","InvalidTypeName","InvalidWitness","KimchiProver","KimchiSetup","KimchiVerifier","LocalVariableNotFound","MainFunctionInLib","MethodCallOnNonCustomStruct","MismatchFunctionArguments","MismatchStructFields","MismatchType","MissingExpression","MissingParenthesis","MissingPrivateArg","MissingPublicArg","MissingReturn","MissingToken","MissingType","NoArgsInMain","NoMainFunction","NoOneLetterVariable","NoReturnExpected","NotAStaticMethod","Ok","OrderOfConstDeclaration","OrderOfUseDeclaration","ParsingError","PrivateInputNotUsed","PubArgumentOutsideMain","PublicOutputReserved","RecursiveMain","ReservedType","Result","ReturnTypeMismatch","SelfHasAttribute","ShadowingBuiltIn","StdImport","UndefinedField","UndefinedFunction","UndefinedMethod","UndefinedModule","UndefinedStruct","UndefinedVariable","UnexpectedError","UnexpectedReturn","UnknownDependency","UnknownExternalFn","UnknownExternalStruct","UnusedInput","UnusedReturnValue","UseAfterFn","WrongArgumentType","borrow","","borrow_mut","","deref","","deref_mut","","drop","","fmt","","","","from","","","","","","help","init","","into","","into_miette","kind","label","labels","new","source","span","to_string","","try_from","","try_into","","type_id","","vzip","","arg_name","expected_ty","fn_name","observed_ty","PrettyField","poseidon","pretty","BuiltIn","","BuiltinModule","FnHandle","FnKind","Module","ModuleKind","Native","","borrow","","","","borrow_mut","","","","clone","","clone_into","","clone_to_uninit","","deref","","","","deref_mut","","","","deserialize","drop","","","","fmt","","","","from","","","","functions","init","","","","into","","","","kind","name","serialize","to_owned","","try_from","","","","try_into","","","","type_id","","","","vzip","","","","ExtField","Inputs","InvalidField","JsonFileError","JsonInputs","MismatchJsonArgument","ParsingError","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","deserialize","drop","","fmt","","from","","init","","into","","parse_inputs","source","to_dec_string","to_owned","to_string","try_from","","try_into","","type_id","","vzip","","file","source","Ampersand","BigUInt","Colon","Comma","Comment","Const","Dot","DoubleAmpersand","DoubleColon","DoubleDot","DoubleEqual","DoublePipe","Else","Equal","Exclamation","False","Fn","For","Greater","Identifier","If","In","Keyword","","LeftBracket","LeftCurlyBracket","LeftParen","Less","Let","LexerCtx","Minus","Mut","NotEqual","Pipe","Plus","Pub","Question","Return","RightArrow","RightBracket","RightCurlyBracket","RightParen","SemiColon","Slash","Star","Struct","Token","TokenKind","Tokens","True","Use","borrow","","","","borrow_mut","","","","clone","","","clone_into","","","clone_to_uninit","","","deref","","","","deref_mut","","","","drop","","","","eq","","equivalent","","","","","","error","fmt","","","","","","from","","","","init","","","","into","","","","kind","new","new_token","parse","","span","","to_owned","","","to_string","","tokens","try_from","","","","try_into","","","","type_id","","","","vzip","","","","Tokens","borrow","borrow_mut","bump","bump_err","bump_expected","bump_ident","deref","deref_mut","drop","fmt","from","init","into","new","peek","peeked","try_from","try_into","type_id","vzip","NAST","ast","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","resolve_modules","try_from","try_into","type_id","vzip","AST","ConstDef","CustomType","Expr","ExprKind","FunctionDef","Op2","ParserCtx","Root","RootKind","StructDef","UsePath","borrow","","borrow_mut","","default","","deref","","deref_mut","","drop","","error","expr","filename_id","fmt","","from","","init","","into","","last_span","last_token","new","next_node_id","node_id","parse","structs","try_from","","try_into","","type_id","","types","vzip","","Addition","ArrayAccess","ArrayDeclaration","Assignment","BigUInt","BinaryOp","Bool","BoolAnd","BoolOr","CustomTypeDeclaration","Division","Equality","Expr","ExprKind","FieldAccess","FnCall","IfElse","Inequality","MethodCall","Multiplication","Negated","Not","Op2","Subtraction","Variable","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","deref","","","deref_mut","","","deserialize","","","drop","","","fmt","","","from","","","init","","","into","","","kind","new","node_id","parse","serialize","","","span","to_owned","","","try_from","","","try_into","","","type_id","","","vzip","","","args","","array","cond","custom","else_","fields","fn_name","idx","lhs","","","","method_name","module","","name","op","protected","rhs","","","then_","CustomType","StructDef","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","deserialize","drop","","fields","fmt","","from","","init","","into","","module","","name","","parse","","serialize","span","","to_owned","try_from","","try_into","","type_id","","vzip","","Absolute","Alias","Array","Assign","Attribute","AttributeKind","BigInt","Bool","Comment","","Const","ConstDef","","Custom","Expr","Field","FnArg","FnSig","ForLoop","FuncOrMethod","Function","FunctionDef","","Ident","Local","Method","","MethodSig","ModulePath","Pub","Range","Return","Root","RootKind","Stmt","StmtKind","StructDef","Ty","TyKind","Use","UsePath","arguments","","attribute","body","","borrow","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","clone","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","default","","","","deref","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","deserialize","","","","","","","","","","","","","","drop","","","","","","","","","","","","","","","","","","","end","eq","","","equivalent","","","","","","","","","fmt","","","","","","","","","","","","","","","","","","","from","","","","","","","","","","","","","","","","","","","get_hash","","","hash","","","init","","","","","","","","","","","","","","","","","","","into","","","","","","","","","","","","","","","","","","","is_constant","","","is_main","is_public","","","is_valid_fn_name","is_valid_fn_type","kind","","","","","match_expected","module","","name","","","","new","parse","","","","","","","","parse_args","parse_fn_body","parse_fn_call_args","parse_fn_return_type","parse_type_declaration","range","reserved_types","return_type","","same_as","self_name","serialize","","","","","","","","","","","","","","sig","","span","","","","","","","","","","","start","submodule","to_owned","","","","","","","","","","","","","","to_string","","try_from","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","typ","type_id","","","","","","","","","","","","","","","","","","","value","","vzip","","","","","","","","","","","","","","","","","","","body","lhs","mutable","range","rhs","var","module","name","SerdeAs","borrow","borrow_mut","deref","deref_mut","deserialize_as","drop","from","init","into","ser","serialize_as","try_from","try_into","type_id","vzip","deserialize","serialize","BUILTIN_FN_NAMES","BUILTIN_SIGS","QUALIFIED_BUILTINS","builtin_fns","crypto","get_builtin_fn","CRYPTO_SIGS","crypto_fns","get_crypto_fn","is_hexadecimal","is_identifier","is_identifier_or_type","is_numeric","is_type","ConstInfo","FnInfo","FullyQualified","StructInfo","TypeChecker","TypeInfo","TypedFnEnv","analyze","borrow","","","borrow_mut","","","check_block","check_fn_call","check_stmt","checker","clone","clone_into","clone_to_uninit","deref","","","deref_mut","","","deserialize","","","drop","","","eq","equivalent","","","error","fmt","","","fn_env","from","","","get_hash","hash","init","","","into","","","local","module","name","new","","serialize","","","to_owned","try_from","","","try_into","","","typ","type_id","","","value","vzip","","","FnInfo","StructInfo","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","default","deref","","deref_mut","","deserialize","","drop","","fields","fmt","","from","","init","","into","","kind","methods","name","serialize","","sig","span","to_owned","","try_from","","try_into","","type_id","","vzip","","TypeInfo","TypedFnEnv","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","constant","default","deref","","deref_mut","","drop","","fmt","","from","","get_type","get_type_info","init","","into","","is_in_scope","mutable","","nest","new","","new_cst","new_mut","pop","span","store_type","to_owned","","try_from","","try_into","","typ","type_id","","vzip","","display_source","noname_version","title","Cell","Const","ConstOrCell","Constant","External","Hint","HintFn","Inverse","LinearCombination","Mul","PublicOutput","Ref","Scale","Value","Var","","VarOrRef","borrow","","","","borrow_mut","","","","clone","","","clone_into","","","clone_to_uninit","","","constant","cst","cvar","cvars","deref","","","","deref_mut","","","","deserialize","","","drop","","","","fmt","","","from","","","","get","index","init","","","","into","","","","is_const","is_empty","iter","len","new","new_constant","new_constant_typ","new_cvar","new_var","range","serialize","","","span","to_owned","","","try_from","","","","try_into","","","","type_id","","","","vzip","","","","len","start","var_name","CompiledCircuit","WitnessEnv","add_value","asm","borrow","","borrow_mut","","cached_values","circuit","compile_to_indexes","default","deref","","deref_mut","","drop","","fmt","from","","generate_witness","get_external","init","","into","","main_info","parse_single_input","try_from","","try_into","","type_id","","var_values","vzip",""],"q":[[0,"noname"],[20,"noname::backends"],[67,"noname::backends::kimchi"],[174,"noname::backends::kimchi::asm"],[195,"noname::backends::kimchi::builtin"],[196,"noname::backends::kimchi::prover"],[229,"noname::backends::r1cs"],[362,"noname::backends::r1cs::arkworks"],[379,"noname::backends::r1cs::builtin"],[380,"noname::backends::r1cs::snarkjs"],[416,"noname::circuit_writer"],[479,"noname::circuit_writer::fn_env"],[529,"noname::circuit_writer::writer"],[655,"noname::cli"],[678,"noname::cli::cmd_build_and_check"],[771,"noname::cli::cmd_new_and_init"],[817,"noname::cli::cmd_prove_and_verify"],[863,"noname::cli::manifest"],[905,"noname::cli::packages"],[975,"noname::compiler"],[1000,"noname::constants"],[1037,"noname::constraints"],[1039,"noname::constraints::boolean"],[1044,"noname::constraints::field"],[1052,"noname::error"],[1190,"noname::error::ErrorKind"],[1194,"noname::helpers"],[1197,"noname::imports"],[1271,"noname::inputs"],[1314,"noname::inputs::ParsingError"],[1316,"noname::lexer"],[1452,"noname::lexer::tokens"],[1473,"noname::name_resolution"],[1488,"noname::parser"],[1539,"noname::parser::expr"],[1626,"noname::parser::expr::ExprKind"],[1649,"noname::parser::structs"],[1693,"noname::parser::types"],[2154,"noname::parser::types::StmtKind"],[2160,"noname::parser::types::TyKind"],[2162,"noname::serialization"],[2178,"noname::serialization::ser"],[2180,"noname::stdlib"],[2186,"noname::stdlib::crypto"],[2189,"noname::syntax"],[2194,"noname::type_checker"],[2270,"noname::type_checker::checker"],[2317,"noname::type_checker::fn_env"],[2369,"noname::utils"],[2372,"noname::var"],[2475,"noname::var::VarOrRef"],[2478,"noname::witness"],[2516,"core::option"],[2517,"alloc::vec"],[2518,"alloc::string"],[2519,"core::result"],[2520,"core::any"],[2521,"core::cmp"],[2522,"mina_curves::pasta::curves::vesta"],[2523,"poly_commitment::evaluation_proof"],[2524,"kimchi::prover_index"],[2525,"kimchi::verifier_index"],[2526,"miette::eyreish"],[2527,"serde::de"],[2528,"core::fmt"],[2529,"core::hash"],[2530,"core::marker"],[2531,"serde::ser"],[2532,"core::default"],[2533,"core::clone"],[2534,"core::iter::traits::iterator"],[2535,"kimchi::proof"],[2536,"ark_relations::r1cs::constraint_system"],[2537,"ark_relations::r1cs::error"],[2538,"std::io::error"],[2539,"core::error"],[2540,"kimchi::circuits::gate"],[2541,"clap_builder::builder::command"],[2542,"camino"],[2543,"clap_builder::parser::matches::arg_matches"],[2544,"clap_builder"],[2545,"clap_builder::util::id"],[2546,"std::collections::hash::set"],[2547,"ark_ff::fields"],[2548,"kimchi::error"],[2549,"alloc::boxed"],[2550,"core::str::traits"],[2551,"core::ops::range"],[2552,"ark_serialize"],[2553,"core::slice::iter"],[2554,"serde_json::value"]],"i":"````````````````````````j0Bl0011111111100110001011010`11110001`10000``````Cd00000E``110Dh2Cf2130`3030300033102130213002130000031021302330021302130113333303`200Ch2413241324132413241`F`00000`0000000`00000```Gb0Gd1010100101010101110101010010```````H`Gj00000`001GnGl32Hf21430`421432143214331221430214302214302122211132140211430332221430321430333333032`2112143214302143021430214300```Hl0`00000000000``Ib`0If1010101011101100010101101010101```````Fn00000Il100001101001000001110`11011110101100101010101010```IjG`1010101011010101010110101010110101010101001001``Jn``Kd10`11K`Kb2Kf421304213042130421301021104213042130421304213010111000421130421304213042130101421302421301421304213024213042130```````````````````````````KnL`LdLb321032103210`````32103210321032103210321032103210321032103210321032103210321032103210``LnLl101010``1010101010101010101010101010101010``M`Mb101010``1010101010101010101010101010101010``MdMf10101010010100101010101001`10101010010```MhMlMj2102020202102102`210222222102210```222101210`222022102102102`210``Bf00`00000`0`00Nd11111``1`n00000000000000000000000000000000000```````````````Jb0000000000B```11111111111111111111111111111111111111111111111111111011111111`1111111111111111111Hj20202020200220222220020210000200202020202ADl000``OfOnOj`````10Ol2Oh21302020202130213022130213021302013021302112021302130213021302`Nl00`0`0Gf100000101001011101010`1A@`1221212121ADn0A@d0000A@b1111110110001100`111110`1011101011111110```00A@h12A@f1230230230230123012301230232223331122330123012301230013201023023`1230123012301230`A@j0000000000000000000`Nb0000000000000````````````A@lAA`10101010101`110101010111110`101010`10AAdAAb0000011011``00010100`10Jd1201201201201201201201201201201201201200000120012012012012012AE`AEbAEdAEfAEh10423AEjAElAEn67AF`0113215``AAhAAf1000001010010110101010101010010010101010AAl0JfABn``110ACbAAn`1323``2`ABd`2`5`0``1`3````2``2`AFbABfABhAFdABb14AAj;:A@n8AB`3865ABjABl=AC`Mn>ACd9<7AAlJf8AAn8;ABd?>87ABn76ACb6=54<3;>2ABfABh<;39?76>5=ABb521=<4:AAj98A@n8AB`3854ABjABl9?=3:7AFdAFb6?>5=47<9832;AC`Mn<ACd439AAlJf:AAn:=ABdABfABh<;ABn98ACb8AAj87A@n7AB`ABb876ABjABl7?AFdAFb7?>6=54<;:329AC`Mn:ACd6AAlJf;111000;;;<100;AAn;:ABdABfABh<;ABn988ACb8<;AAj87A@n7AB`ABb876ABjABl7AC`Mn8ACdAAlJf9109AFdAFb<32;AAn;:ABdABfABh<;ABn;:ACb:76AAj:9A@n7AB`ABb876ABjABl7AC`Mn8ACd>6;5>6;``86<32Jf21AFb>=29:97?>53277`7`6:0>10:AAl2:AAn:9ABdABfABh;:ABn9AFd>0AAjA@nAB`ABb6ABjABlAC`MnACd418?Jf8?76>=<54;202:AFb:AAl2:AAn:9ABdABfABh;:ABn:9ACb9AFd8AAj8:A@n8AB`ABb987ABjABl8AC`Mn9ACd<9AFb9AAlJf:AAn:9ABdABfABh;:ABn:9ACb9A@n:AFd:AAj:928AB`ABb987ABjABl8AC`Mn9ACdAFfAFh0101AFj0`AFl00000000`00000```````````````````````JjJ`In2102222`11110210210210200002102`1020010210200002102110210211021102``JhJl1010101001010101001010101010010111010101010``ADfAD`101010101010101010100010100010101101010101011010```Nf0`Ah00`0000AFn1``0`012Bb1230230230230033012301230230123023012300012301230300000000023002301230123012301230AG`00``AlHh0101100101010110101010100010101101","f":"``````````````````````````````{{{l{b{j{}{{d{c}}{f{e}}{h{g}}}}}}{l{e}}{l{e}}n}eA`Ab{}}{{{l{b{j{}{{d{c}}{f{e}}{h{g}}}}}}{l{e}}{l{c}}n}eA`Ab{}}{{{l{b{j{}{{d{c}}{f{e}}{h{g}}}}}}{Af{{l{Ad}}}}cn}eA`Ab{}}{{{l{b{j{}{{d{c}}{f{e}}{h{g}}}}}}{Ah{{j{}{{d{c}}{f{e}}{h{g}}}}}}n}eA`Ab{}}00{{{l{b{j{}{{d{c}}{f{e}}{h{g}}}}}}{l{e}}cn}AjA`Ab{}}{{{l{b{j{}{{d{c}}{f{e}}{h{g}}}}}}{l{e}}{l{e}}n}AjA`Ab{}}{l{{l{c}}}{}}{{{l{b}}}{{l{bc}}}{}}{{{l{{j{}{{d{c}}{f{e}}{h{g}}}}}}{l{b{Al{c}}}}{l{{Ah{{j{}{{d{c}}{f{e}}{h{g}}}}}}}}An}{{B`{c}}}A`Ab{}}{{{l{{j{}{{d{c}}{f{e}}{h{g}}}}}}{l{b{Al{c}}}}{l{e}}}{{B`{c}}}A`Ab{}}{An{{l{c}}}{}}{An{{l{bc}}}{}}{AnAj}{{{l{b{j{}{{d{c}}{f{e}}{h{g}}}}}}{Af{{Bb{ce}}}}{Af{{Bd{e}}}}}{{B`{Aj}}}A`Ab{}}{cc{}}{{{l{{j{}{{d{c}}{f{e}}{h{g}}}}}}{l{Bf}}Bh}BjA`Ab{}}{{{l{{j{}{{d{c}}{f{e}}{h{g}}}}}}{l{b{Al{c}}}}}{{B`{g}}}A`Ab{}}{{}An}{{{l{b{j{}{{d{c}}{f{e}}{h{g}}}}}}}AjA`Ab{}}{{}c{}}`{{{l{b{j{}{{d{c}}{f{e}}{h{g}}}}}}{l{e}}{l{e}}n}eA`Ab{}}{{{l{b{j{}{{d{c}}{f{e}}{h{g}}}}}}{l{e}}{l{c}}n}eA`Ab{}}{{{l{b{j{}{{d{c}}{f{e}}{h{g}}}}}}{l{e}}n}eA`Ab{}}{{{l{b{j{}{{d{c}}{f{e}}{h{g}}}}}}{Ah{{j{}{{d{c}}{f{e}}{h{g}}}}}}n}eA`Ab{}}{BhBl}{{}Bl}0{{}{{Bn{{j{}{{d{c}}{f{e}}{h{g}}}}}}}A`Ab{}}`6{c{{C`{e}}}{}{}}{{}{{C`{c}}}{}}{lCb}:``````{{{l{bCd}}{l{Cf}}{l{Cf}}n}Cf}{{{l{bCd}}{l{Cf}}{l{c}}n}Cf{}}{{{l{bCd}}{Af{{l{Ad}}}}Chn}Cf}{{{l{bCd}}{Ah{Cd}}n}c{}}{{{l{bCd}}{Ah{Cd}}n}Cf}0``{{{l{bCd}}{l{Cf}}cn}Aj{}}{{{l{bCd}}{l{Cf}}{l{Cf}}n}Aj}{l{{l{c}}}{}}000{{{l{b}}}{{l{bc}}}{}}000`{{{l{Cd}}}Cd}{{{l{Cf}}}Cf}{{l{l{bc}}}Aj{}}0{lAj}0{{{l{Cf}}{l{Cf}}}Cj}{{l{l{c}}}Cj{}}{{{l{Cd}}}{{Df{{Dd{{D`{Cl{Cn{Cl}}}}{Db{Cl{Cn{Cl}}}}}}}}}}{{{l{Cd}}{l{b{Al{c}}}}{l{e}}}{{B`{c}}}{}{}}{{{l{Dh}}}Aj}{{}Cf}{An{{l{c}}}{}}000{An{{l{bc}}}{}}000{c{{C`{Cf}}}Dj}{AnAj}000{{{l{Cf}}{l{Cf}}}Bh}{{l{l{c}}}Bh{}}00{{{l{bCd}}{Af{{Bb{ce}}}}{Af{{Bd{Cf}}}}}{{B`{Aj}}}{}{}}{{{l{Dh}}{l{bDl}}}Dn}{{{l{Cf}}{l{bDl}}}Dn}{cc{}}000`{{{l{Cd}}{l{Bf}}Bh}Bj}{{{l{Cd}}{l{b{Al{Ch}}}}}{{B`{E`}}}}{{{l{c}}{l{e}}}Eb{EdEf}Eh}{{{l{Cf}}{l{bc}}}AjEj}{{}An}000{{}c{}}000{{{l{Dh}}}Bh}{{{l{Dh}}}An}{{{l{bCd}}{l{Cf}}{l{Cf}}n}Cf}{{{l{bCd}}{l{Cf}}{l{c}}n}Cf{}}{{{l{bCd}}{l{Cf}}n}Cf}{BhCd}{{{l{bCd}}{Ah{Cd}}n}Cf}{{{l{Cf}}{l{Cf}}}{{Af{Cj}}}}{{}{{Bn{Cd}}}}``{{{l{Cf}}c}C`El}`{{{l{Ch}}}Bj}{{{l{Dh}}}{{En{{Bd{Ch}}}}}}{lc{}}0{c{{C`{e}}}{}{}}000{{}{{C`{c}}}{}}000{lCb}000{{}c{}}000`{l{{l{c}}}{}}{{{l{b}}}{{l{bc}}}{}}{{}{{F`{c}}}Fb}{An{{l{c}}}{}}{An{{l{bc}}}{}}{AnAj}{{{l{b{F`{Ch}}}}{l{{Fd{Ch}}}}}Aj}{cc{}}{{}An}{{{l{b{F`{c}}}}c}Bh{FfEdFh}}:{{{l{{F`{c}}}}}Bh{FfEdFh}}{{{l{{F`{c}}}}}{{`{{Fl{}{{Fj{{l{c}}}}}}}}}{FfEdFh}}{{{l{{F`{c}}}}}An{FfEdFh}}{{{l{{F`{Ch}}}}{l{{Fd{Ch}}}}}{{Bd{Bj}}}}{{{l{{F`{c}}}}{l{c}}}An{FfEdFh}}{c{{C`{e}}}{}{}}{{}{{C`{c}}}{}}{lCb}{{}c{}}{{{l{b{Fn{Cd}}}}{l{{Fd{{G`{ChCf}}}}}}n}{{B`{{Af{{Bb{ChCf}}}}}}}}``{{{l{Gb}}{l{Bf}}Bh}Bj}{l{{l{c}}}{}}0{{{l{b}}}{{l{bc}}}{}}0{An{{l{c}}}{}}0{An{{l{bc}}}{}}0{c{{C`{Gd}}}Dj}{AnAj}0{cc{}}0{{}An}0::{{{l{Gb}}}Bh}{{{l{Gb}}}An}{{{l{Gb}}{l{Bf}}GfGfBh}{{Df{{Dd{{Gh{Cl{Cn{Cl}}}}{Bd{Ch}}{Bd{Ch}}}}}}}}{{{l{Gd}}c}C`El}{c{{C`{e}}}{}{}}0{{}{{C`{c}}}{}}0{lCb}0{{{l{Gd}}{Bd{Ch}}{Gh{Cl{Cn{Cl}}}}}{{Df{Aj}}}}{{}c{}}0````````{{{l{b{Gj{c}}}}{l{{Gl{c}}}}{l{{Gl{c}}}}n}{{Gl{c}}}A`}{{{l{b{Gj{c}}}}{l{{Gl{c}}}}{l{c}}n}{{Gl{c}}}A`}{{{l{b{Gj{c}}}}{Af{{l{Ad}}}}cn}{{Gl{c}}}A`}{{{l{b{Gj{c}}}}{Ah{{Gj{c}}}}n}{{Gl{c}}}A`}00`{{{l{b{Gj{c}}}}{l{{Gl{c}}}}cn}AjA`}{{{l{b{Gj{c}}}}{l{{Gl{c}}}}{l{{Gl{c}}}}n}AjA`}`{l{{l{c}}}{}}0000{{{l{b}}}{{l{bc}}}{}}0000``{{{l{Gn}}}Gn}{{{l{{Gl{c}}}}}{{Gl{c}}}{A`Fh}}{{{l{{H`{c}}}}}{{H`{c}}}{A`Fh}}{{{l{{Gj{c}}}}}{{Gj{c}}}{A`Fh}}{{l{l{bc}}}Aj{}}000{lAj}000{{{l{{Gj{c}}}}{l{b{Al{e}}}}{l{{Gl{e}}}}}{{B`{e}}}A`{}}`{{}Gn}{An{{l{c}}}{}}0000{An{{l{bc}}}{}}0000{c{{C`{Gn}}}Dj}{AnAj}0000{{{l{Gn}}{l{Gn}}}Bh}{{{l{{Gl{c}}}}{l{{Gl{c}}}}}Bh{A`Hb}}{{l{l{c}}}Bh{}}00000{{{l{b{Gj{c}}}}{Af{{Bb{eg}}}}{Af{{Bd{{Gl{c}}}}}}}{{B`{Aj}}}A`{}{}}{{{l{Gn}}{l{bDl}}}Dn}{{{l{{Gl{c}}}}{l{bDl}}}Dn{A`Hd}}{{{l{{H`{c}}}}{l{bDl}}}Dn{A`Hd}}{{{l{{Hf{c}}}}{l{bDl}}}Dn{A`Hd}}{cc{}}0{Gn{{Gl{c}}}A`}111{{{l{{Gj{c}}}}{l{Bf}}Bh}BjA`}{{{l{{Gj{c}}}}{l{b{Al{c}}}}}{{B`{e}}}A`{}}{{{l{c}}{l{e}}}Eb{EdEf}Eh}{{{l{Gn}}{l{bc}}}AjEj}{{}An}0000{{{l{b{Gj{c}}}}}AjA`}{{}c{}}0000{{{l{b{Gj{c}}}}{l{{Gl{c}}}}{l{{Gl{c}}}}n}{{Gl{c}}}A`}{{{l{b{Gj{c}}}}{l{{Gl{c}}}}{l{c}}n}{{Gl{c}}}A`}{{{l{b{Gj{c}}}}{l{{Gl{c}}}}n}{{Gl{c}}}A`}{{}{{Gj{c}}}A`}{{{l{b{Gj{c}}}}{Ah{{Gj{c}}}}n}{{Gl{c}}}A`}{{{l{{Gj{c}}}}}AnA`}`{{}{{Bn{{Gj{c}}}}}A`}{{{l{Gn}}c}C`El}````{lc{}}000{c{{C`{e}}}{}{}}0000{{}{{C`{c}}}{}}0000{lCb}0000<<<<<````{l{{l{c}}}{}}{{{l{b}}}{{l{bc}}}{}}{{{l{Ad}}}{{C`{{Hh{{Gj{c}}}}Hj}}}A`}{An{{l{c}}}{}}{An{{l{bc}}}{}}{AnAj}{cc{}}{{{Hl{c}}{Hn{c}}}{{C`{AjI`}}}A`}{{}An}{{}c{}}<;:0{{{l{b{Fn{{Gj{c}}}}}}{l{{Fd{{G`{c{Gl{c}}}}}}}}n}{{B`{{Af{{Bb{c{Gl{c}}}}}}}}}A`}````::99776655{{{l{Ib}}{l{bDl}}}Dn}05{IdIb}6{{{l{{If{c}}}}{l{Ad}}}{{C`{AjIb}}}A`}{{{l{{If{c}}}}{l{Ad}}{Hf{c}}}{{C`{AjIb}}}A`}6655{{{Gj{c}}}{{If{c}}}A`}{{{l{Ib}}}{{Af{{l{Ih}}}}}}{lBj}{c{{C`{e}}}{}{}}0{{}{{C`{c}}}{}}0{lCb}0;;```````{{{l{{Fn{c}}}}{l{bIj}}BjG`}Ajj}{{{l{b{Fn{c}}}}BjAnn}Bbj}0{{{l{b{Fn{c}}}}Ann}Ajj}`{l{{l{c}}}{}}0{{{l{b}}}{{l{bc}}}{}}0{{{l{Il}}}Il}{{l{l{bc}}}Aj{}}{lAj}{{{l{{Fn{c}}}}{l{In}}}{{Af{{l{J`}}}}}j}{An{{l{c}}}{}}0{An{{l{bc}}}{}}0{c{{C`{Il}}}Dj}{AnAj}0{{{l{Il}}{l{Il}}}Bh}{{l{l{c}}}Bh{}}00{{{l{{Fn{c}}}}Jbn}Hjj}{{{l{{Fn{c}}}}{l{Jd}}}{{Af{{l{Jf}}}}}j}{{{l{{Fn{c}}}}{l{bDl}}}Dn{jHd}}{{{l{Il}}{l{bDl}}}Dn}`{{{l{{Fn{c}}}}{l{In}}}{{Af{{l{{Jh{c}}}}}}}j}{cc{}}0{{{Jj{c}}c}{{B`{{Hh{c}}}}}j}{{{l{{Fn{c}}}}{l{bAl}}}B`j}{{{l{{Fn{c}}}}{l{Ij}}{l{Ad}}}G`j}{{}An}0{{}c{}}0{{{l{{Fn{c}}}}}{{B`{{l{{Jh{c}}}}}}}j}{{{l{{Fn{c}}}}An}{{Af{{l{Jf}}}}}j}`{{{l{Il}}c}C`El}{{{l{{Fn{c}}}}{l{Jf}}}Anj}`{{{l{{Fn{c}}}}{l{In}}}{{Af{{l{Jl}}}}}j}{lc{}}{c{{C`{e}}}{}{}}0{{}{{C`{c}}}{}}0{lCb}099```{{{l{b{Ij{ce}}}}Bj{G`{ce}}}AjA`Ab}{l{{l{c}}}{}}0{{{l{b}}}{{l{bc}}}{}}0{{{l{{G`{ce}}}}}{{G`{ce}}}{A`Fh}{AbFh}}{{{l{{Ij{ce}}}}}{{Ij{ce}}}{A`Fh}{AbFh}}{{l{l{bc}}}Aj{}}0{lAj}0{{}{{Ij{ce}}}{A`Fb}{AbFb}}{An{{l{c}}}{}}0{An{{l{bc}}}{}}0{AnAj}0{{{l{{G`{ce}}}}{l{bDl}}}Dn{A`Hd}{AbHd}}{{{l{{Ij{ce}}}}{l{bDl}}}Dn{A`Hd}{AbHd}}{cc{}}0{{{l{{Ij{ce}}}}{l{Ad}}}{{G`{ce}}}A`Ab}{{}An}0{{}c{}}0`{{{l{b{Ij{ce}}}}}AjA`Ab}{{{Bb{ce}}Bh{Af{Jf}}}{{G`{ce}}}A`Ab}{{}{{Ij{ce}}}A`Ab}2{{{l{{G`{ce}}}}{Bb{ce}}}{{G`{ce}}}A`Ab}{{{l{b{Ij{ce}}}}{l{Ad}}{Bb{ce}}}AjA`Ab}{{{l{{G`{ce}}}}{Bb{ce}}AnAn}{{G`{ce}}}A`Ab}{{{l{b{Ij{ce}}}}{l{Ad}}{Bb{ce}}AnAn}AjA`Ab}{lc{}}0{c{{C`{e}}}{}{}}0{{}{{C`{c}}}{}}0`{lCb}0`;;``````````{l{{l{c}}}{}}0000{{{l{b}}}{{l{bc}}}{}}0000{{{l{Jn}}}Jn}{{{l{K`}}}K`}{{{l{Kb}}}Kb}{{{l{Kd}}}Kd}{{{l{Kf}}}Kf}{{l{l{bc}}}Aj{}}0000{lAj}0000{{{l{Kb}}{l{Kb}}}Cj}{{{l{Kf}}{l{Kf}}}Cj}``{{l{l{c}}}Cj{}}0{An{{l{c}}}{}}0000{An{{l{bc}}}{}}0000{c{{C`{Jn}}}Dj}{c{{C`{K`}}}Dj}{c{{C`{Kb}}}Dj}{c{{C`{Kd}}}Dj}{c{{C`{Kf}}}Dj}{AnAj}0000{{{l{Kb}}{l{Kb}}}Bh}{{{l{Kf}}{l{Kf}}}Bh}{{l{l{c}}}Bh{}}00000{{{l{Jn}}{l{bDl}}}Dn}{{{l{K`}}{l{bDl}}}Dn}{{{l{Kb}}{l{bDl}}}Dn}0{{{l{Kd}}{l{bDl}}}Dn}{{{l{Kf}}{l{bDl}}}Dn}{cc{}}0000{{}An}0000{{}c{}}0000{{{l{Kb}}{l{Kb}}}{{Af{Cj}}}}{{{l{Kf}}{l{Kf}}}{{Af{Cj}}}}`{{{l{Jn}}c}C`El}{{{l{K`}}c}C`El}{{{l{Kb}}c}C`El}{{{l{Kd}}c}C`El}{{{l{Kf}}c}C`El}{{{l{K`}}An}{{Kh{Ch}}}}{lc{}}0000{lBj}{c{{C`{e}}}{}{}}0000{{}{{C`{c}}}{}}0000`{lCb}0000=====```````````````````````````{KjKj}0000000{l{{l{c}}}{}}000{{{l{b}}}{{l{bc}}}{}}000{{{l{Kl}}BhBh}{{Df{{Dd{BfGbGd}}}}}}{Kn{{Df{Aj}}}}{L`{{Df{Aj}}}}{Lb{{Df{Aj}}}}{Ld{{Df{Aj}}}}{{}Kj}0000000{An{{l{c}}}{}}000{An{{l{bc}}}{}}000{AnAj}000{cc{}}000{{{l{Lf}}}{{C`{KnLh}}}}{{{l{Lf}}}{{C`{L`Lh}}}}{{{l{Lf}}}{{C`{LdLh}}}}{{{l{Lf}}}{{C`{LbLh}}}}{{{l{bLf}}}{{C`{KnLh}}}}{{{l{bLf}}}{{C`{L`Lh}}}}{{{l{bLf}}}{{C`{LdLh}}}}{{{l{bLf}}}{{C`{LbLh}}}}{{}{{Af{Lj}}}}000{{}An}000{{}c{}}000{c{{C`{e}}}{}{}}000{{}{{C`{c}}}{}}000{lCb}000{{{l{bKn}}{l{Lf}}}{{C`{AjLh}}}}{{{l{bL`}}{l{Lf}}}{{C`{AjLh}}}}{{{l{bLd}}{l{Lf}}}{{C`{AjLh}}}}{{{l{bLb}}{l{Lf}}}{{C`{AjLh}}}}{{{l{bKn}}{l{bLf}}}{{C`{AjLh}}}}{{{l{bL`}}{l{bLf}}}{{C`{AjLh}}}}{{{l{bLd}}{l{bLf}}}{{C`{AjLh}}}}{{{l{bLb}}{l{bLf}}}{{C`{AjLh}}}};;;;``{KjKj}000{l{{l{c}}}{}}0{{{l{b}}}{{l{bc}}}{}}0{Ll{{Df{Aj}}}}{Ln{{Df{Aj}}}}{{}Kj}000{An{{l{c}}}{}}0{An{{l{bc}}}{}}0{AnAj}0{cc{}}0{{{l{Lf}}}{{C`{LnLh}}}}{{{l{Lf}}}{{C`{LlLh}}}}{{{l{bLf}}}{{C`{LnLh}}}}{{{l{bLf}}}{{C`{LlLh}}}}{{}{{Af{Lj}}}}0{{}An}0{{}c{}}0{c{{C`{e}}}{}{}}0{{}{{C`{c}}}{}}0{lCb}0{{{l{bLn}}{l{Lf}}}{{C`{AjLh}}}}{{{l{bLl}}{l{Lf}}}{{C`{AjLh}}}}{{{l{bLn}}{l{bLf}}}{{C`{AjLh}}}}{{{l{bLl}}{l{bLf}}}{{C`{AjLh}}}}77``{KjKj}000{l{{l{c}}}{}}0{{{l{b}}}{{l{bc}}}{}}0{M`{{Df{Aj}}}}{Mb{{Df{Aj}}}}{{}Kj}000{An{{l{c}}}{}}0{An{{l{bc}}}{}}0{AnAj}0{cc{}}0{{{l{Lf}}}{{C`{M`Lh}}}}{{{l{Lf}}}{{C`{MbLh}}}}{{{l{bLf}}}{{C`{M`Lh}}}}{{{l{bLf}}}{{C`{MbLh}}}}{{}{{Af{Lj}}}}0{{}An}0{{}c{}}0{c{{C`{e}}}{}{}}0{{}{{C`{c}}}{}}0{lCb}0{{{l{bM`}}{l{Lf}}}{{C`{AjLh}}}}{{{l{bMb}}{l{Lf}}}{{C`{AjLh}}}}{{{l{bM`}}{l{bLf}}}{{C`{AjLh}}}}{{{l{bMb}}{l{bLf}}}{{C`{AjLh}}}}77``{l{{l{c}}}{}}0{{{l{b}}}{{l{bc}}}{}}0{{{l{Md}}}Md}{{{l{Mf}}}Mf}{{l{l{bc}}}Aj{}}0{lAj}0`{An{{l{c}}}{}}0{An{{l{bc}}}{}}0`{c{{C`{Md}}}Dj}{c{{C`{Mf}}}Dj}{AnAj}0{cc{}}0{{}An}0{{}c{}}0``{{{l{Kl}}}{{Df{Md}}}}{lc{}}0{c{{C`{e}}}{}{}}0{{}{{C`{c}}}{}}0{lCb}0`55```{l{{l{c}}}{}}00{{{l{b}}}{{l{bc}}}{}}00{{{l{Mh}}}Mh}{{{l{Mj}}}Mj}{{l{l{bc}}}Aj{}}0{lAj}0{An{{l{c}}}{}}00{An{{l{bc}}}{}}00{c{{C`{Mh}}}Dj}{{{l{Mh}}}{{Df{Aj}}}}{AnAj}00{{{l{Mh}}{l{Mh}}}Bh}{{l{l{c}}}Bh{}}00{{{l{Mh}}{l{bDl}}}Dn}0{{{l{Ml}}{l{bDl}}}Dn}{{{l{Mj}}{l{bDl}}}Dn}{cc{}}{{{l{Mn}}}Mh}11{{{l{Mh}}}{{Df{Md}}}}{{{l{Mh}}}{{Df{Bj}}}}{{{l{Md}}}{{Bd{Mh}}}}{{{l{c}}{l{e}}}Eb{EdEf}Eh}{{{l{Mh}}{l{bc}}}AjEj}{{}An}00{{{l{bMl}}{l{Mh}}{N`{Mh}}}{{Df{Mj}}}}{{}c{}}00{{{l{Kl}}}Bh}`{{{l{Mh}}c}C`El}{lc{}}0{lBj}{c{{C`{e}}}{}{}}00{{}{{C`{c}}}{}}00{lCb}00`{{{l{Kl}}Bh}{{Df{Md}}}}888``{{{l{bBf}}BjBj}An}{l{{l{c}}}{}}{{{l{b}}}{{l{bc}}}{}}{{{l{Bf}}{Jj{c}}c}{{Df{{Hh{c}}}}}j}{An{{l{c}}}{}}{An{{l{bc}}}{}}{AnAj}{{{l{Bf}}{l{bDl}}}Dn}{cc{}}{{{l{{Hh{c}}}}{l{Bf}}GfGf}Dfj}{{{l{Bf}}{l{An}}}{{Af{{l{{Dd{BjBj}}}}}}}}{{{Af{Mh}}{l{bBf}}BjBjAn}{{B`{{Dd{{Nb{c}}An}}}}}j}{{}An}{{}c{}}{{Nd{l{Bf}}}{{Df{c}}}{}}`{{}Bf}{c{{C`{e}}}{}{}}{{}{{C`{c}}}{}}{lCb}{{{l{b{Jj{c}}}}{Af{Mh}}{l{bBf}}BjBjAn}{{Df{An}}}j}{{{l{b{Jj{c}}}}{Af{Mh}}{l{bBf}}BjBjAn}{{B`{An}}}j}7`{l{{l{c}}}{}}{{{l{b}}}{{l{bc}}}{}}{{{l{n}}}n}{{l{l{bc}}}Aj{}}{lAj}{{{l{n}}{l{n}}}Cj}{{l{l{c}}}Cj{}}{{}n}{An{{l{c}}}{}}{An{{l{bc}}}{}}{c{{C`{n}}}Dj}{AnAj}{{{l{n}}}An}{{{l{n}}{l{n}}}Bh}{{l{l{c}}}Bh{}}00`{{{l{n}}{l{bDl}}}Dn}{cc{}}{{{l{c}}{l{e}}}Eb{EdEf}Eh}{{{l{n}}{l{bc}}}AjEj}{{}An}{{}c{}}{{{l{n}}}Bh}`{{nn}n}{{AnAnAn}n}{{{l{n}}{l{n}}}{{Af{Cj}}}}{{{l{n}}c}C`El}`{lc{}}{c{{C`{e}}}{}{}}{{}{{C`{c}}}{}}{lCb}9``{{{l{b{Fn{c}}}}{l{Nf}}{l{Nf}}n}Bbj}{{{l{b{Fn{c}}}}{l{Nf}}n}Ajj}{cBhNh}{{{l{b{Fn{c}}}}{l{Nf}}n}Bbj}33{{{l{b{Fn{c}}}}{l{Bb}}{l{Bb}}n}Bbj}{{{l{b{Fn{c}}}}{l{Bb}}{l{Bb}}{l{Bb}}n}Bbj}{{{l{b{Fn{c}}}}{l{Nf}}{l{Nf}}{l{Nf}}n}Bbj}6326````````````````````````````````````````````````````````````````````````````````````````````````{l{{l{c}}}{}}0{{{l{b}}}{{l{bc}}}{}}0{An{{l{c}}}{}}0{An{{l{bc}}}{}}0{AnAj}0{{{l{Hj}}{l{bDl}}}Dn}0{{{l{Jb}}{l{bDl}}}Dn}0{cc{}}{NjJb}{NlJb}2{NnJb}{O`Jb}{{{l{Hj}}}{{Af{{Od{Ob}}}}}}{{}An}0{{}c{}}0{{{B`{c}}{l{Bf}}}{{Df{c}}}{}}``{{{l{Hj}}}{{Af{{Od{Fl}}}}}}{{{l{Ad}}Jbn}Hj}{{{l{Jb}}}{{Af{{l{Ih}}}}}}`{lBj}0{c{{C`{e}}}{}{}}0{{}{{C`{c}}}{}}0{lCb}088`````{{{En{Ch}}}Ch}{{{l{Of}}}Bj}`````````{l{{l{c}}}{}}000{{{l{b}}}{{l{bc}}}{}}000{{{l{{Oh{c}}}}}{{Oh{c}}}{jFh}}{{{l{{Oj{c}}}}}{{Oj{c}}}{jFh}}{{l{l{bc}}}Aj{}}0{lAj}0{An{{l{c}}}{}}000{An{{l{bc}}}{}}000{c{{C`{{Oj{e}}}}}Djj}{AnAj}000{{{l{{Ol{c}}}}{l{bDl}}}Dn{jHd}}{{{l{{On{c}}}}{l{bDl}}}Dn{jHd}}{{{l{{Oh{c}}}}{l{bDl}}}Dn{jHd}}{{{l{{Oj{c}}}}{l{bDl}}}Dnj}{cc{}}000`{{}An}000{{}c{}}000``{{{l{{Oj{c}}}}e}C`jEl}{lc{}}0{c{{C`{e}}}{}{}}000{{}{{C`{c}}}{}}000{lCb}0005555```````{l{{l{c}}}{}}0{{{l{b}}}{{l{bc}}}{}}0{{{l{Gf}}}Gf}{{l{l{bc}}}Aj{}}{lAj}{{}Gf}{An{{l{c}}}{}}0{An{{l{bc}}}{}}0{c{{C`{Gf}}}Dj}{AnAj}0{{{l{Nl}}{l{bDl}}}Dn}0{cc{}}0{{}An}0{{}c{}}0{{{l{Ad}}}{{C`{GfNl}}}}{{{l{Nl}}}{{Af{{l{Ih}}}}}}{{{l{A@`}}}Bj}{lc{}}{lBj}{c{{C`{e}}}{}{}}0{{}{{C`{c}}}{}}0{lCb}088`````````````````````````````````````````````````````{l{{l{c}}}{}}000{{{l{b}}}{{l{bc}}}{}}000{{{l{A@b}}}A@b}{{{l{A@d}}}A@d}{{{l{A@f}}}A@f}{{l{l{bc}}}Aj{}}00{lAj}00{An{{l{c}}}{}}000{An{{l{bc}}}{}}000{AnAj}000{{{l{A@b}}{l{A@b}}}Bh}{{{l{A@d}}{l{A@d}}}Bh}{{l{l{c}}}Bh{}}00000{{{l{A@h}}Jbn}Hj}{{{l{A@h}}{l{bDl}}}Dn}{{{l{A@b}}{l{bDl}}}Dn}0{{{l{A@d}}{l{bDl}}}Dn}0{{{l{A@f}}{l{bDl}}}Dn}{cc{}}000{{}An}000{{}c{}}000`{AnA@h}{{A@d{l{bA@h}}An}A@f}{{{l{Ad}}}{{Af{A@b}}}}{{An{l{Ad}}}{{B`{A@j}}}}{{{l{A@h}}AnAn}n}`{lc{}}00{lBj}0`{c{{C`{e}}}{}{}}000{{}{{C`{c}}}{}}000{lCb}000::::`{l{{l{c}}}{}}{{{l{b}}}{{l{bc}}}{}}{{{l{bA@j}}{l{bA@l}}}{{Af{A@f}}}}{{{l{bA@j}}{l{bA@l}}Jb}{{B`{A@f}}}}{{{l{bA@j}}{l{bA@l}}A@d}{{B`{A@f}}}}{{{l{bA@j}}{l{bA@l}}Jb}{{B`{A@n}}}}{An{{l{c}}}{}}{An{{l{bc}}}{}}{AnAj}{{{l{A@j}}{l{bDl}}}Dn}{cc{}}{{}An}{{}c{}}{{{Bd{A@f}}}A@j}{{{l{bA@j}}}{{Af{A@f}}}}`{c{{C`{e}}}{}{}}{{}{{C`{c}}}{}}{lCb}5``{l{{l{c}}}{}}{{{l{b}}}{{l{bc}}}{}}=<;987{{{Af{Mh}}{AA`{c}}}{{B`{{Nb{c}}}}}j}5438````````````2211{{}A@l}{{}{{AA`{c}}}{Fbj}}{An{{l{c}}}{}}0{An{{l{bc}}}{}}0{AnAj}0{{{l{A@l}}Jbn}Hj}``{{{l{A@l}}{l{bDl}}}Dn}{{{l{{AA`{c}}}}{l{bDl}}}Dn{Hdj}}{cc{}}0{{}An}0{{}c{}}0{{{l{A@l}}}n}`{{AnAn}A@l}{{{l{bA@l}}}An}`{{AnA@jAn}{{B`{{Dd{{AA`{c}}An}}}}}j}`{c{{C`{e}}}{}{}}0{{}{{C`{c}}}{}}0{lCb}0`77`````````````````````````{l{{l{c}}}{}}00{{{l{b}}}{{l{bc}}}{}}00{{{l{Jd}}}Jd}{{{l{AAb}}}AAb}{{{l{AAd}}}AAd}{{l{l{bc}}}Aj{}}00{lAj}00{An{{l{c}}}{}}00{An{{l{bc}}}{}}00{c{{C`{Jd}}}Dj}{c{{C`{AAb}}}Dj}{c{{C`{AAd}}}Dj}{AnAj}00{{{l{Jd}}{l{bDl}}}Dn}{{{l{AAb}}{l{bDl}}}Dn}{{{l{AAd}}{l{bDl}}}Dn}{cc{}}00{{}An}00{{}c{}}00`{{{l{bA@l}}AAbn}Jd}`{{{l{bA@l}}{l{bA@j}}}{{B`{Jd}}}}{{{l{Jd}}c}C`El}{{{l{AAb}}c}C`El}{{{l{AAd}}c}C`El}`{lc{}}00{c{{C`{e}}}{}{}}00{{}{{C`{c}}}{}}00{lCb}00999`````````````````````````{l{{l{c}}}{}}0{{{l{b}}}{{l{bc}}}{}}0{{{l{AAf}}}AAf}{{l{l{bc}}}Aj{}}{lAj}{{}AAf}{An{{l{c}}}{}}0{An{{l{bc}}}{}}0{c{{C`{AAf}}}Dj}{AnAj}0`{{{l{AAh}}{l{bDl}}}Dn}{{{l{AAf}}{l{bDl}}}Dn}{cc{}}0{{}An}0{{}c{}}0````{{{l{bA@l}}{l{bA@j}}}{{B`{AAh}}}}{{{l{bA@l}}{l{bA@j}}}{{B`{AAf}}}}{{{l{AAf}}c}C`El}``{lc{}}{c{{C`{e}}}{}{}}0{{}{{C`{c}}}{}}0{lCb}077``````````````````````````````````````````````{l{{l{c}}}{}}000000000000000000{{{l{b}}}{{l{bc}}}{}}000000000000000000{{{l{AAj}}}AAj}{{{l{AAl}}}AAl}{{{l{Jf}}}Jf}{{{l{A@n}}}A@n}{{{l{AAn}}}AAn}{{{l{AB`}}}AB`}{{{l{ABb}}}ABb}{{{l{ABd}}}ABd}{{{l{ABf}}}ABf}{{{l{ABh}}}ABh}{{{l{ABj}}}ABj}{{{l{ABl}}}ABl}{{{l{ABn}}}ABn}{{{l{Mn}}}Mn}{{l{l{bc}}}Aj{}}0000000000000{lAj}0000000000000{{}AAl}{{}A@n}{{}ABd}{{}ABf}{An{{l{c}}}{}}000000000000000000{An{{l{bc}}}{}}000000000000000000{c{{C`{AAj}}}Dj}{c{{C`{AAl}}}Dj}{c{{C`{Jf}}}Dj}{c{{C`{A@n}}}Dj}{c{{C`{AAn}}}Dj}{c{{C`{AB`}}}Dj}{c{{C`{ABb}}}Dj}{c{{C`{ABd}}}Dj}{c{{C`{ABf}}}Dj}{c{{C`{ABh}}}Dj}{c{{C`{ABj}}}Dj}{c{{C`{ABl}}}Dj}{c{{C`{ABn}}}Dj}{c{{C`{Mn}}}Dj}{AnAj}000000000000000000`{{{l{AAl}}{l{AAl}}}Bh}{{{l{Jf}}{l{Jf}}}Bh}{{{l{A@n}}{l{A@n}}}Bh}{{l{l{c}}}Bh{}}00000000{{{l{AAj}}{l{bDl}}}Dn}{{{l{AAl}}{l{bDl}}}Dn}{{{l{Jf}}{l{bDl}}}Dn}0{{{l{A@n}}{l{bDl}}}Dn}{{{l{AAn}}{l{bDl}}}Dn}{{{l{AB`}}{l{bDl}}}Dn}{{{l{ABb}}{l{bDl}}}Dn}{{{l{ABd}}{l{bDl}}}Dn}{{{l{ABf}}{l{bDl}}}Dn}{{{l{ABh}}{l{bDl}}}Dn}{{{l{ABj}}{l{bDl}}}Dn}{{{l{ABl}}{l{bDl}}}Dn}{{{l{ABn}}{l{bDl}}}Dn}{{{l{{AC`{c}}}}{l{bDl}}}Dn{NhHd}}{{{l{Mn}}{l{bDl}}}Dn}0{{{l{{ACb{c}}}}{l{bDl}}}Dn{HdNh}}{{{l{{ACd{c}}}}{l{bDl}}}Dn{NhHd}}{cc{}}000000000000000000{{{l{c}}{l{e}}}Eb{EdEf}Eh}00{{{l{AAl}}{l{bc}}}AjEj}{{{l{Jf}}{l{bc}}}AjEj}{{{l{A@n}}{l{bc}}}AjEj}{{}An}000000000000000000{{}c{}}000000000000000000{{{l{AAn}}}Bh}{{{l{AB`}}}Bh}{{{l{ABh}}}Bh}{{{l{ABb}}}Bh}321{{{l{Ad}}}Bh}0`````{{{l{Jf}}{l{Jf}}}Bh}``````{{Bjn}A@n}{{{l{bA@l}}{l{bA@j}}}{{B`{AAj}}}}{{{l{bA@l}}{l{bA@j}}}{{B`{A@n}}}}{{{l{bA@l}}{l{bA@j}}}{{B`{ABb}}}}{{{l{bA@l}}{l{bA@j}}}{{B`{{Dd{A@nABd}}}}}}{{{l{bA@l}}{l{bA@j}}}{{B`{ABf}}}}{{{l{bA@l}}{l{bA@j}}}{{B`{ABl}}}}{{{l{bA@l}}{l{bA@j}}}{{B`{Mn}}}}{{{l{bA@l}}{l{bA@j}}}{{B`{{ACd{c}}}}}{NhACf}}{{{l{bA@l}}{l{bA@j}}{l{ABd}}}{{B`{{Bd{ABh}}}}}}{{{l{bA@l}}{l{bA@j}}}{{B`{{Bd{ABl}}}}}}{{{l{bA@l}}{l{bA@j}}}{{B`{{Dd{{Bd{Jd}}n}}}}}}{{{l{bA@l}}{l{bA@j}}}{{B`{{Af{AAj}}}}}}{{{l{bA@l}}{l{bA@j}}A@n}{{B`{Jd}}}}{{{l{ABj}}}{{ACj{ACh}}}}{{AAlA@n}Jf}``{{{l{Jf}}{l{Jf}}}Bh}`{{{l{AAj}}c}C`El}{{{l{AAl}}c}C`El}{{{l{Jf}}c}C`El}{{{l{A@n}}c}C`El}{{{l{AAn}}c}C`El}{{{l{AB`}}c}C`El}{{{l{ABb}}c}C`El}{{{l{ABd}}c}C`El}{{{l{ABf}}c}C`El}{{{l{ABh}}c}C`El}{{{l{ABj}}c}C`El}{{{l{ABl}}c}C`El}{{{l{ABn}}c}C`El}{{{l{Mn}}c}C`El}```````````````{lc{}}0000000000000{lBj}0{c{{C`{e}}}{}{}}000000000000000000{{}{{C`{c}}}{}}000000000000000000`{lCb}000000000000000000``{{}c{}}000000000000000000`````````{l{{l{c}}}{}}{{{l{b}}}{{l{bc}}}{}}{An{{l{c}}}{}}{An{{l{bc}}}{}}{c{{C`{e}}}DjACl}{AnAj}{cc{}}{{}An}8`{{{l{c}}e}C`ACnEl}<;:94{{ce}C`ACnEl}```{{}{{Bd{{Jh{c}}}}}j}`{{{l{Ad}}}{{Af{{Jh{c}}}}}j}`10{{{l{Ad}}}Bh}0000```````{{{l{b{Jj{c}}}}{Nb{c}}Bh}{{B`{Aj}}}j}===<<<{{{l{b{Jj{c}}}}{l{bAD`}}{l{{Fd{ABl}}}}{Af{{l{AAj}}}}}{{B`{Aj}}}j}{{{l{b{Jj{c}}}}{l{bAD`}}BhABf{l{{Fd{Jd}}}}n}{{B`{{Af{Jf}}}}}j}{{{l{b{Jj{c}}}}{l{bAD`}}{l{ABl}}}{{B`{{Af{Jf}}}}}j}`{{{l{{J`{c}}}}}{{J`{c}}}{NhFh}}{{l{l{bc}}}Aj{}}{lAj}{An{{l{c}}}{}}00{An{{l{bc}}}{}}00{c{{C`{{J`{e}}}}}DjNh}{c{{C`{In}}}Dj}{c{{C`{{Jj{e}}}}}Dj{jADb}}{AnAj}00{{{l{In}}{l{In}}}Bh}{{l{l{c}}}Bh{}}00{{{l{{Jj{c}}}}Jbn}Hjj}{{{l{{J`{c}}}}{l{bDl}}}Dn{NhHd}}{{{l{In}}{l{bDl}}}Dn}{{{l{{Jj{c}}}}{l{bDl}}}Dn{jHd}}`{cc{}}00{{{l{c}}{l{e}}}Eb{EdEf}Eh}{{{l{In}}{l{bc}}}AjEj}{{}An}00{{}c{}}00{BjIn}``{{{l{AAl}}{l{Bj}}}In}{{}{{Jj{c}}}j}{{{l{{J`{c}}}}e}C`NhEl}{{{l{In}}c}C`El}{{{l{{Jj{c}}}}e}C`{jADd}El}{lc{}}{c{{C`{e}}}{}{}}00{{}{{C`{c}}}{}}00`{lCb}00`:::``{l{{l{c}}}{}}0{{{l{b}}}{{l{bc}}}{}}0{{{l{{Jh{c}}}}}{{Jh{c}}}{jFh}}{{{l{Jl}}}Jl}{{l{l{bc}}}Aj{}}0{lAj}0{{}Jl}{An{{l{c}}}{}}0{An{{l{bc}}}{}}0{c{{C`{{Jh{e}}}}}Dj{jADb}}{c{{C`{Jl}}}Dj}{AnAj}0`{{{l{{Jh{c}}}}{l{bDl}}}Dn{jHd}}{{{l{Jl}}{l{bDl}}}Dn}{cc{}}0{{}An}0{{}c{}}0```{{{l{{Jh{c}}}}e}C`{jADd}El}{{{l{Jl}}c}C`El}{{{l{{Jh{c}}}}}{{l{ABf}}}j}`{lc{}}0{c{{C`{e}}}{}{}}0{{}{{C`{c}}}{}}0{lCb}077``{l{{l{c}}}{}}0{{{l{b}}}{{l{bc}}}{}}0{{{l{ADf}}}ADf}{{{l{AD`}}}AD`}{{l{l{bc}}}Aj{}}0{lAj}0`{{}AD`}{An{{l{c}}}{}}0{An{{l{bc}}}{}}0{AnAj}0{{{l{ADf}}{l{bDl}}}Dn}{{{l{AD`}}{l{bDl}}}Dn}{cc{}}0{{{l{AD`}}{l{Ad}}}{{Af{{l{Jf}}}}}}{{{l{AD`}}{l{Ad}}}{{Af{{l{ADf}}}}}}{{}An}0{{}c{}}0{{{l{AD`}}An}Bh}{{{l{AD`}}{l{Ad}}}{{Af{Bh}}}}`{{{l{bAD`}}}Aj}{{Jfn}ADf}>001`{{{l{bAD`}}BjADf}{{B`{Aj}}}}{lc{}}0{c{{C`{e}}}{}{}}0{{}{{C`{c}}}{}}0`{lCb}099{{{l{bBj}}{l{Bf}}{l{{Fd{Il}}}}}Aj}{{}Bj}{{{l{bBj}}{l{Ad}}}Aj}`````````````````{l{{l{c}}}{}}000{{{l{b}}}{{l{bc}}}{}}000{{{l{{Ah{c}}}}}{{Ah{c}}}{jFh}}{{{l{{Nf{ce}}}}}{{Nf{ce}}}{NhFh}{AbFh}}{{{l{{Bb{ce}}}}}{{Bb{ce}}}{NhFh}{AbFh}}{{l{l{bc}}}Aj{}}00{lAj}00{{{l{{Bb{ce}}}}}{{Af{c}}}NhAb}{{{l{{Nf{ce}}}}}{{Af{c}}}NhAb}{{{l{{Nf{ce}}}}}{{Af{{l{e}}}}}NhAb}`{An{{l{c}}}{}}000{An{{l{bc}}}{}}000{c{{C`{{Ah{e}}}}}Djj}{c{{C`{{Nf{eg}}}}}DjNh{AbADb}}{c{{C`{{Bb{eg}}}}}Dj{NhADb}{AbADb}}{AnAj}000{{{l{{Ah{c}}}}{l{bDl}}}Dnj}{{{l{{Nf{ce}}}}{l{bDl}}}Dn{NhHd}{AbHd}}{{{l{{Bb{ce}}}}{l{bDl}}}Dn{NhHd}{AbHd}}{cc{}}000{{{l{{Bb{ce}}}}An}{{Af{{l{{Nf{ce}}}}}}}NhAb}{{{l{{Bb{ce}}}}An}{{l{g}}}NhAb{}}{{}An}000{{}c{}}000{{{l{{Nf{ce}}}}}BhNhAb}{{{l{{Bb{ce}}}}}BhNhAb}{{{l{{Bb{ce}}}}}{{ADh{{Nf{ce}}}}}NhAb}{{{l{{Bb{ce}}}}}AnNhAb}{{{Bd{{Nf{ce}}}}n}{{Bb{ce}}}NhAb}{{cn}{{Bb{ce}}}NhAb}{{{l{{J`{c}}}}n}{{Bb{ce}}}NhAb}{{{Nf{ce}}n}{{Bb{ce}}}NhAb}{{cn}{{Bb{ec}}}AbNh}{{{l{{Bb{ce}}}}AnAn}{{l{{Fd{{Nf{ce}}}}}}}NhAb}{{{l{{Ah{c}}}}e}C`jEl}{{{l{{Nf{ce}}}}g}C`Nh{AbADd}El}{{{l{{Bb{ce}}}}g}C`{NhADd}{AbADd}El}`{lc{}}00{c{{C`{e}}}{}{}}000{{}{{C`{c}}}{}}000{lCb}000{{}c{}}000`````{{{l{b{Al{c}}}}Bj{Bd{c}}}AjNh}{{{l{{Hh{c}}}}{l{Bf}}Bh}Bjj}{l{{l{c}}}{}}0{{{l{b}}}{{l{bc}}}{}}0``{{{Hh{Cd}}}{{Df{{Dd{GbGd}}}}}}{{}{{Al{c}}}{NhFb}}{An{{l{c}}}{}}0{An{{l{bc}}}{}}0{AnAj}0{{{l{{Al{c}}}}{l{bDl}}}Dn{NhHd}}{cc{}}0{{{l{{Hh{c}}}}GfGf}B`j}{{{l{{Al{c}}}}{l{Ad}}}{{Bd{c}}}Nh}{{}An}0>>{{{l{{Hh{c}}}}}{{l{{Jh{c}}}}}j}{{{l{{Hh{c}}}}ADj{l{Jf}}}{{C`{BdNl}}}j}{c{{C`{e}}}{}{}}0{{}{{C`{c}}}{}}0{lCb}0`{{}c{}}0","D":"CBj","p":[[0,"mut"],[17,"Field"],[17,"Var"],[17,"GeneratedWitness"],[10,"Backend",20],[1,"reference"],[5,"Span",1000],[10,"BackendField",20],[10,"BackendVar",20],[1,"str"],[6,"Option",2516],[6,"Value",2372],[1,"unit"],[5,"WitnessEnv",2478],[1,"usize"],[8,"Result",1052],[5,"Var",2372],[5,"Vec",2517],[5,"Sources",975],[1,"bool"],[5,"String",2518],[6,"BackendKind",20],[8,"FnHandle",1197],[6,"Result",2519],[5,"TypeId",2520],[5,"KimchiVesta",67],[5,"KimchiCellVar",67],[8,"VestaField",67],[6,"Ordering",2521],[8,"Vesta",2522],[5,"OpeningProof",2523],[5,"ProverIndex",2524],[5,"VerifierIndex",2525],[1,"tuple"],[8,"Result",2526],[5,"Witness",67],[10,"Deserializer",2527],[5,"Formatter",2528],[8,"Result",2528],[5,"GeneratedWitness",67],[1,"u64"],[10,"Hash",2529],[10,"Sized",2530],[10,"BuildHasher",2529],[10,"Hasher",2529],[10,"Serializer",2531],[1,"array"],[5,"OrderedHashSet",174],[10,"Default",2532],[1,"slice"],[10,"Eq",2521],[10,"Clone",2533],[17,"Item"],[10,"Iterator",2534],[5,"CircuitWriter",416],[5,"VarInfo",479],[5,"ProverIndex",196],[5,"VerifierIndex",196],[5,"JsonInputs",1271],[5,"ProverProof",2535],[5,"R1CS",229],[5,"LinearCombination",229],[5,"CellVar",229],[5,"Constraint",229],[10,"PartialEq",2521],[10,"Debug",2528],[5,"GeneratedWitness",229],[5,"CompiledCircuit",2478],[5,"Error",1052],[5,"NoNameCircuit",362],[6,"ConstraintSystemRef",2536],[6,"SynthesisError",2537],[6,"Error",380],[5,"Error",2538],[5,"SnarkjsExporter",380],[10,"Error",2539],[5,"FnEnv",479],[5,"DebugInfo",416],[5,"FullyQualified",2194],[5,"ConstInfo",2194],[6,"ErrorKind",1052],[5,"Expr",1539],[6,"TyKind",1693],[5,"FnInfo",2270],[5,"TypeChecker",2194],[5,"StructInfo",2270],[6,"GateKind",529],[5,"Gate",529],[5,"Cell",529],[6,"Wiring",529],[5,"AnnotatedCell",529],[5,"CircuitGate",2540],[5,"Command",2541],[5,"Utf8PathBuf",2542],[5,"CmdBuild",678],[5,"CmdCheck",678],[5,"CmdRun",678],[5,"CmdTest",678],[5,"ArgMatches",2543],[8,"Error",2544],[5,"Id",2545],[5,"CmdInit",771],[5,"CmdNew",771],[5,"CmdProve",817],[5,"CmdVerify",817],[5,"Manifest",863],[5,"Package",863],[5,"UserRepo",905],[5,"DependencyNode",905],[5,"DependencyGraph",905],[5,"UsePath",1693],[5,"HashSet",2546],[5,"NAST",1473],[10,"IntoMiette",975],[6,"ConstOrCell",2372],[10,"Field",2547],[6,"SetupError",2548],[6,"ParsingError",1271],[6,"ProverError",2548],[6,"VerifyError",2548],[10,"Display",2528],[5,"Box",2549],[10,"PrettyField",1194],[5,"BuiltinModule",1197],[6,"FnKind",1197],[5,"Module",1197],[6,"ModuleKind",1197],[10,"ExtField",1271],[6,"Keyword",1316],[6,"TokenKind",1316],[5,"Token",1316],[5,"LexerCtx",1316],[5,"Tokens",1452],[5,"ParserCtx",1488],[5,"Ident",1693],[5,"AST",1488],[6,"ExprKind",1539],[6,"Op2",1539],[5,"CustomType",1649],[5,"StructDef",1649],[5,"Ty",1693],[6,"ModulePath",1693],[6,"AttributeKind",1693],[5,"Attribute",1693],[5,"FunctionDef",1693],[6,"FuncOrMethod",1693],[5,"FnSig",1693],[5,"FnArg",1693],[5,"Range",1693],[5,"Stmt",1693],[6,"StmtKind",1693],[5,"Root",1693],[6,"RootKind",1693],[5,"ConstDef",1693],[10,"FromStr",2550],[1,"u32"],[5,"Range",2551],[10,"CanonicalDeserialize",2552],[10,"CanonicalSerialize",2552],[5,"TypedFnEnv",2317],[10,"Deserialize",2527],[10,"Serialize",2531],[5,"TypeInfo",2317],[5,"Iter",2553],[6,"Value",2554],[15,"WrongArgumentType",1190],[15,"JsonFileError",1314],[15,"FnCall",1626],[15,"MethodCall",1626],[15,"ArrayAccess",1626],[15,"IfElse",1626],[15,"CustomTypeDeclaration",1626],[15,"Assignment",1626],[15,"FieldAccess",1626],[15,"BinaryOp",1626],[15,"Variable",1626],[5,"MethodSig",1693],[5,"Method",1693],[15,"ForLoop",2154],[15,"Assign",2154],[15,"Custom",2160],[5,"SerdeAs",2162],[6,"VarOrRef",2372],[15,"Ref",2475]],"r":[[418,479],[419,529],[420,529],[421,479],[422,529],[655,678],[656,678],[657,771],[658,771],[659,817],[660,678],[661,678],[662,817],[665,678],[667,678],[668,771],[669,771],[671,817],[673,678],[674,678],[675,817],[1364,1452],[1489,1693],[1490,1649],[1491,1539],[1492,1539],[1493,1693],[1494,1539],[1496,1693],[1497,1693],[1498,1649],[1499,1693],[2195,2270],[2197,2270],[2199,2317],[2200,2317]],"b":[[394,"impl-Display-for-Error"],[395,"impl-Debug-for-Error"],[600,"impl-Debug-for-Cell"],[601,"impl-Display-for-Cell"],[935,"impl-Debug-for-UserRepo"],[936,"impl-Display-for-UserRepo"],[1158,"impl-Debug-for-Error"],[1159,"impl-Display-for-Error"],[1160,"impl-Display-for-ErrorKind"],[1161,"impl-Debug-for-ErrorKind"],[1163,"impl-From%3CSetupError%3E-for-ErrorKind"],[1164,"impl-From%3CParsingError%3E-for-ErrorKind"],[1166,"impl-From%3CProverError%3E-for-ErrorKind"],[1167,"impl-From%3CVerifyError%3E-for-ErrorKind"],[1293,"impl-Display-for-ParsingError"],[1294,"impl-Debug-for-ParsingError"],[1406,"impl-Debug-for-Keyword"],[1407,"impl-Display-for-Keyword"],[1408,"impl-Debug-for-TokenKind"],[1409,"impl-Display-for-TokenKind"],[1909,"impl-Debug-for-TyKind"],[1910,"impl-Display-for-TyKind"],[1922,"impl-Debug-for-UsePath"],[1923,"impl-Display-for-UsePath"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAD8IwQABAAIABQAEAAsAAgAPAAAAEQAEABcAAAAbAAIAJwACACsAAgAyAAAANQAAADoAAgA+AAAAQAAGAEkABgBSACoAggAHAI4ACACZAAIAnQARALAABgC4AAEAuwAXANUAAQDZAAEA3AAKAOsABQD0ADYALAEDADIBAAA2AQAAOAEHAEUBAwBLASgAdQEBAHgBBQCBAQsAjgEAAJIBAQCWAQsAowEIAK0BGADIAQAAygECANABAADSAQEA1QEKAOMBEgD5AQEA/QEAAP8BAAACAgIABgIFAA0CAQAQAgYAGAIAABoCHAA4AiQAYgIEAGwCGACGAhEAmgI5ANgCDwDsAi0AHAMHACYDIQBKAwcAVAMhAHgDAQB8AwEAfwMMAI0DEgChAwoArQMAALEDAACzAwUAvAMPAM0DAwDSAwcA2wMDAOADAADiAwQA6AMUAP4DAgACBAsADwQFABcEAQAdBAoAKwQ0AGEEEgB1BBUAjAQBAI8EBACWBAAAmQQAAJsEAACdBA0ArAQAALAEAACzBAEAtwQeANoEBADjBBgA/QQSABIFAQAWBRMAKwUFADIFAQA3BQEAOwUFAEIFAQBFBQIASQUAAEsFBgBTBQIAWAUrAIgFAwCQBQsAnQUSALMFBAC5BQAAuwUAAL0FCwDKBQAAzAULANkFEQDsBQEA8AUBAPQFAAD2BQAA+QULAAsGAQAOBgMAFQYAABcGAAAaBgEAHQYdAD4GAgBEBgIASAYkAG4GFwCIBgEAjAYRAKEGAgCmBgQArAYAAK4GAwCzBgEAtwYAALkGAAC7BgIAvwYHAMkGvQCaBxgAxgcXAN8HAQDiB5AAdAgFAHsIAAB+CAQAhQgAAIcIAACJCAIAjQgAAJMIAwCYCAEAmwgGAKMIGADACAQAyAgAAMoIFADhCBUA+QgBAP0IEAAQCQkAGwkIACYJAAAoCQEALQkAADAJAAAyCQEANwkFAD4JBgBOCQAAUQkAAFYJEwBrCREAgQkFAIsJDACZCRUAsAkRAMQJAwDKCQoA"}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[52911]}